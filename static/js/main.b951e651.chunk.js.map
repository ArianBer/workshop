{"version":3,"sources":["Components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","setCategoryClicked","useState","category","setCategory","categoryParent","setcategoryParent","setChildVisiblity","useEffect","fetch","then","res","json","data","returnCategories","parent","children","subChildren","subsubChildren","className","filter","map","type","id","onClick","e","target","checked","name","v","for","subParent","subsubParent","lastChildren","App","categoryClicked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA2GeA,EAzGC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjB,EAAgCC,mBAAS,CAAC,KAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAS,CAAC,KAAtD,mBAAOG,EAAP,KAAuBC,EAAvB,KACE,EAA0CJ,oBAAS,GAAnD,mBAAqBK,GAArB,WAEFC,qBAAU,WACRC,MAAM,oCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAUT,EAAYS,GAAMP,EAAkBO,QACtD,IAEH,IAAMC,EAAmB,SAACC,EAAQC,EAAUC,EAAaC,GAMvDjB,GALuBc,EAASA,EAAS,IAAK,KACrBC,EAAWA,EAAW,IAAM,KACzBC,EAAcA,EAAc,IAAM,KAC/BC,EAAiBA,EAAiB,IAAM,MAWzE,OACE,sBAAKC,UAAU,UAAf,UACE,oDACA,+BACGd,EAAee,QAAO,SAACT,GAAD,OAAwB,IAAfA,EAAII,UAAcM,KAAI,SAACN,GAAD,OACpD,+BACE,uBAAOO,KAAK,WAAWC,GAAG,SAASC,QAAS,SAACC,GAAOX,EAAiBW,EAAEC,OAAOC,QAAWZ,EAAOa,KAAO,MAAMrB,GAAkB,SAACsB,GAAD,OAAQA,QACvI,uBAAOC,IAAI,SAAX,SACGf,EAAOa,OAEV,6BACKzB,EAASiB,QAAO,SAACT,GAAD,OAASA,EAAII,SAAWA,EAAOQ,MAC/CF,KAAI,SAACU,GAAD,OACH,+BACE,uBACET,KAAK,WACLC,GAAG,SACHC,QAAS,SAACC,GAAD,OACPX,EAAiBC,EAAOa,KAAMH,EAAEC,OAAOC,QAAUI,EAAUH,KAAO,SAGtE,wBAAOE,IAAI,SAAX,cAAsBC,EAAUH,QAChC,6BACGzB,EACEiB,QAAO,SAACT,GAAD,OAASA,EAAII,SAAWgB,EAAUR,MACzCF,KAAI,SAACW,GAAD,OACH,+BACE,uBACEV,KAAK,WACLC,GAAG,SACHC,QAAS,SAACC,GAAD,OACPX,EACEC,EAAOa,KACPG,EAAUH,KACVH,EAAEC,OAAOC,QACTK,EAAaJ,KACb,SAIN,wBAAOE,IAAI,SAAX,cAAsBE,EAAaJ,QACnC,6BACGzB,EACEiB,QAAO,SAACT,GAAD,OAASA,EAAII,SAAWiB,EAAaT,MAC5CF,KAAI,SAACY,GAAD,OACH,+BACE,uBACEX,KAAK,WACLC,GAAG,SACHC,QAAS,SAACC,GAAD,OACPX,EACEC,EAAOa,KACPG,EAAUH,KACVI,EAAaJ,KACbH,EAAEC,OAAOC,QACTM,EAAaL,KAAM,SAIzB,uBAAOE,IAAI,SAAX,SACGG,EAAaL,qCAa5C,8BC9EOM,MAnBf,WACE,MAA8ChC,mBAAS,IAAvD,mBAAOiC,EAAP,KAAwBlC,EAAxB,KAEA,OACE,qBAAKkB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAASlB,mBAAoBA,MAE/B,qBAAKkB,UAAU,WAAf,SACE,4BAAIgB,cCHDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b951e651.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Sidebar = ({ setCategoryClicked }) => {\r\n  const [category, setCategory] = useState([\"\"]);\r\n  const [categoryParent, setcategoryParent] = useState([\"\"]);\r\n    const [childVisible, setChildVisiblity] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://frakton.dev/articles.php\")\r\n      .then((res) => res.json())\r\n      .then((data) => {setCategory(data);setcategoryParent(data)});\r\n  }, []);\r\n\r\n  const returnCategories = (parent, children, subChildren, subsubChildren) => {\r\n    const parentCategory = parent ? parent + \"/\": \"\";\r\n    const childrenCategory = children ? children + \"/\" : \"\";\r\n    const subChildrenCategory = subChildren ? subChildren + \"/\" : \"\";\r\n    const subsubChildrenCategory = subsubChildren ? subsubChildren + \"/\" : \"\";\r\n\r\n    setCategoryClicked(\r\n      parentCategory  +\r\n      childrenCategory +\r\n      subChildrenCategory +\r\n      subsubChildrenCategory\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Filter by Category</h3>\r\n      <ul>\r\n        {categoryParent.filter((res) => res.parent === 0).map((parent) => (\r\n          <li>\r\n            <input type=\"checkbox\" id=\"option\" onClick={(e) => {returnCategories(e.target.checked ?  parent.name : null);setChildVisiblity((v) => !v)}}/>\r\n            <label for=\"option\" >\r\n              {parent.name}\r\n            </label>\r\n            <ul>\r\n                {category.filter((res) => res.parent === parent.id)\r\n                .map((subParent) => (\r\n                  <li>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"option\"\r\n                      onClick={(e) =>\r\n                        returnCategories(parent.name, e.target.checked ? subParent.name : null)\r\n                      }\r\n                    />\r\n                    <label for=\"option\"> {subParent.name}</label>\r\n                    <ul>\r\n                      {category\r\n                        .filter((res) => res.parent === subParent.id)\r\n                        .map((subsubParent) => (\r\n                          <li>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id=\"option\"\r\n                              onClick={(e) =>\r\n                                returnCategories(\r\n                                  parent.name,\r\n                                  subParent.name,\r\n                                  e.target.checked ?\r\n                                  subsubParent.name :\r\n                                  null\r\n                                )\r\n                              }\r\n                            />\r\n                            <label for=\"option\"> {subsubParent.name}</label>\r\n                            <ul>\r\n                              {category\r\n                                .filter((res) => res.parent === subsubParent.id)\r\n                                .map((lastChildren) => (\r\n                                  <li>\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      id=\"option\"\r\n                                      onClick={(e) =>\r\n                                        returnCategories(\r\n                                          parent.name,\r\n                                          subParent.name,\r\n                                          subsubParent.name,\r\n                                          e.target.checked ?\r\n                                          lastChildren.name :null\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label for=\"option\">\r\n                                      {lastChildren.name}\r\n                                    </label>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </li>\r\n                        ))}\r\n                    </ul>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import './App.css';\nimport React, {useState} from 'react';\nimport Sidebar from './Components/Sidebar';\n\nfunction App() {\n  const [categoryClicked, setCategoryClicked] = useState('');\n\n  return (\n    <div className=\"wsh-app\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Sidebar setCategoryClicked={setCategoryClicked}/>\n          </div>\n          <div className=\"col-lg-8\">\n            <p>{categoryClicked}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}